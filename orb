version: 2.1

description: |
  "Generate diagrams directly in specified format from PlantUML text files in the branch.
    See details @GitHub https://github.com/circleci-orbs-tm/plantuml"

jobs:
  generate-png:
    parameters:
      charset:
        description: "Character Encoding of generated file. Default encoding type is system dependent."
        type: string
        default: ""

      extension:
        description: "File name extension of the PlantUML text file"
        type: string
        default: ".puml"

      persist_to_workspace:
        description: |
          "True: execute persist_to_workspace step.
            False: does not execute persist_to_workspace steps"
        type: boolean
        default: false

      updated_files_only:
        description: |
          "True: generate output from files updated from previous commit.
            False: generate output from files matched specified by parameter key 'extension'."
        type: boolean
        default: false

      workspace_root:
        description: "Root of workspace to persist"
        type: string
        default: "/tmp/circleci_workspace"

      workspace_path:
        description: "Path of workspace to persist"
        type: string
        default: "."

    executor:
      name: plantuml

    working_directory: /tmp/plantuml

    steps:
      - checkout

      - add-ca-certificates

      - install-japanese-fonts

      - generate:
          charset: <<parameters.charset>>
          extension: <<parameters.extension>>
          output_file_format: png
          persist_to_workspace: <<parameters.persist_to_workspace>>
          updated_files_only: <<parameters.updated_files_only>>
          workspace_root: <<parameters.workspace_root>>
          workspace_path: <<parameters.workspace_path>>

  generate-svg:
    parameters:
      charset:
        description: "Character Encoding of generated file. Default encoding type is system dependent."
        type: string
        default: ""

      extension:
        description: "File name extension of the PlantUML text file"
        type: string
        default: ".puml"

      persist_to_workspace:
        description: |
          "True: execute persist_to_workspace step.
            False: does not execute persist_to_workspace steps"
        type: boolean
        default: false

      updated_files_only:
        description: |
          "True: generate output from files updated from previous commit.
            False: generate output from files matched specified by parameter key 'extension'."
        type: boolean
        default: false

      workspace_root:
        description: "Root of workspace to persist"
        type: string
        default: "/tmp/circleci_workspace"

      workspace_path:
        description: "Path of workspace to persist"
        type: string
        default: "."

    executor:
      name: plantuml

    working_directory: /tmp/plantuml

    steps:
      - checkout

      - add-ca-certificates

      - generate:
          charset: <<parameters.charset>>
          extension: <<parameters.extension>>
          output_file_format: svg
          persist_to_workspace: <<parameters.persist_to_workspace>>
          updated_files_only: <<parameters.updated_files_only>>
          workspace_root: <<parameters.workspace_root>>
          workspace_path: <<parameters.workspace_path>>

  generate-eps:
    parameters:
      charset:
        description: "Character Encoding of generated file. Default encoding type is system dependent."
        type: string
        default: ""

      extension:
        description: "File name extension of the PlantUML text file"
        type: string
        default: ".puml"

      persist_to_workspace:
        description: |
          "True: execute persist_to_workspace step.
            False: does not execute persist_to_workspace steps"
        type: boolean
        default: false

      updated_files_only:
        description: |
          "True: generate output from files updated from previous commit.
            False: generate output from files matched specified by parameter key 'extension'."
        type: boolean
        default: false

      workspace_root:
        description: "Root of workspace to persist"
        type: string
        default: "/tmp/circleci_workspace"

      workspace_path:
        description: "Path of workspace to persist"
        type: string
        default: "."

    executor:
      name: plantuml

    working_directory: /tmp/plantuml

    steps:
      - checkout

      - add-ca-certificates

      - install-japanese-fonts

      - generate:
          charset: <<parameters.charset>>
          extension: <<parameters.extension>>
          output_file_format: eps
          persist_to_workspace: <<parameters.persist_to_workspace>>
          updated_files_only: <<parameters.updated_files_only>>
          workspace_root: <<parameters.workspace_root>>
          workspace_path: <<parameters.workspace_path>>

  generate-vdx:
    parameters:
      charset:
        description: "Character Encoding of generated file. Default encoding type is system dependent."
        type: string
        default: ""

      extension:
        description: "File name extension of the PlantUML text file"
        type: string
        default: ".puml"

      persist_to_workspace:
        description: |
          "True: execute persist_to_workspace step.
            False: does not execute persist_to_workspace steps"
        type: boolean
        default: false

      updated_files_only:
        description: |
          "True: generate output from files updated from previous commit.
            False: generate output from files matched specified by parameter key 'extension'."
        type: boolean
        default: false

      workspace_root:
        description: "Root of workspace to persist"
        type: string
        default: "/tmp/circleci_workspace"

      workspace_path:
        description: "Path of workspace to persist"
        type: string
        default: "."

    executor:
      name: plantuml

    working_directory: /tmp/plantuml

    steps:
      - checkout

      - add-ca-certificates

      - generate:
          charset: <<parameters.charset>>
          extension: <<parameters.extension>>
          output_file_format: vdx
          persist_to_workspace: <<parameters.persist_to_workspace>>
          updated_files_only: <<parameters.updated_files_only>>
          workspace_root: <<parameters.workspace_root>>
          workspace_path: <<parameters.workspace_path>>

  generate-utxt:
    parameters:
      charset:
        description: "Character Encoding of generated file. Default encoding type is system dependent."
        type: string
        default: ""

      extension:
        description: "File name extension of the PlantUML text file"
        type: string
        default: ".puml"

      persist_to_workspace:
        description: |
          "True: execute persist_to_workspace step.
            False: does not execute persist_to_workspace steps"
        type: boolean
        default: false

      updated_files_only:
        description: |
          "True: generate output from files updated from previous commit.
            False: generate output from files matched specified by parameter key 'extension'."
        type: boolean
        default: false

      workspace_root:
        description: "Root of workspace to persist"
        type: string
        default: "/tmp/circleci_workspace"

      workspace_path:
        description: "Path of workspace to persist"
        type: string
        default: "."

    executor:
      name: plantuml

    working_directory: /tmp/plantuml

    steps:
      - checkout

      - add-ca-certificates

      - generate:
          charset: <<parameters.charset>>
          extension: <<parameters.extension>>
          output_file_format: utxt
          persist_to_workspace: <<parameters.persist_to_workspace>>
          updated_files_only: <<parameters.updated_files_only>>
          workspace_root: <<parameters.workspace_root>>
          workspace_path: <<parameters.workspace_path>>

  generate-latex:
    parameters:
      charset:
        description: "Character Encoding of generated file. Default encoding type is system dependent."
        type: string
        default: ""

      extension:
        description: "File name extension of the PlantUML text file"
        type: string
        default: ".puml"

      persist_to_workspace:
        description: |
          "True: execute persist_to_workspace step.
            False: does not execute persist_to_workspace steps"
        type: boolean
        default: false

      updated_files_only:
        description: |
          "True: generate output from files updated from previous commit.
            False: generate output from files matched specified by parameter key 'extension'."
        type: boolean
        default: false

      workspace_root:
        description: "Root of workspace to persist"
        type: string
        default: "/tmp/circleci_workspace"

      workspace_path:
        description: "Path of workspace to persist"
        type: string
        default: "."

    executor:
      name: plantuml

    working_directory: /tmp/plantuml

    steps:
      - checkout

      - add-ca-certificates

      - generate:
          charset: <<parameters.charset>>
          extension: <<parameters.extension>>
          output_file_format: latex
          persist_to_workspace: <<parameters.persist_to_workspace>>
          updated_files_only: <<parameters.updated_files_only>>
          workspace_root: <<parameters.workspace_root>>
          workspace_path: <<parameters.workspace_path>>

commands:

  add-ca-certificates:
    steps:
      - run:
          name: Add ca-certificates
          command: apk add --no-cache ca-certificates

  install-japanese-fonts:
    steps:
      - run:
          name: Update system
          command: apk update

      - run:
          name: Install Japanese fonts
          command: apk add --no-cache --repository https://nl.alpinelinux.org/alpine/edge/testing font-ipa

  generate:
    parameters:
      charset:
        description: "Character Encoding of generated file. Default encoding type is system dependent."
        type: string
        default: ""

      extension:
        description: "File name extension of the PlantUML text file"
        type: string
        default: ".puml"

      output_file_format:
        description: |
          "Output file format option. Must be one of those:
             - png
             - svg
             - eps
             - vdx
             - utxt
             - latex"
        type: enum
        enum: ["png", "svg", "eps", "vdx", "utxt", "latex"]
        default: "png"

      persist_to_workspace:
        description: |
          "True: execute persist_to_workspace step.
            False: does not execute persist_to_workspace steps"
        type: boolean
        default: false

      updated_files_only:
        description: |
          "True: generate output from files updated from previous commit.
            False: generate output from files matched specified by parameter key 'extension'."
        type: boolean
        default: false

      workspace_root:
        description: "Root of workspace to persist"
        type: string
        default: "/tmp/circleci_workspace"

      workspace_path:
        description: "Path of workspace to persist"
        type: string
        default: "."

    steps:
      - when:
          condition: <<parameters.updated_files_only>>
          steps:
            - run:
                name: Install Git
                command: apk add --update git

            - run:
                name: Get files list, which is updated from previous commit
                command: git diff HEAD^ HEAD --name-only > list

            - run:
                name: Check if diagram files updated from previous commit
                command: |
                  if grep <<parameters.extension>> list >/dev/null; then
                    echo "Files have been updated from previous commit."
                  else
                    echo "No files have not been updated from previous commit, exit."
                    exit 1
                  fi

            - run:
                name: Create directories to store artifacts
                command: mkdir -p <<parameters.workspace_root>>/<<parameters.workspace_path>>

            - run:
                name: Create file lists to generate
                command: grep <<parameters.extension>> list > text_to_svg

            - when:
                condition: <<parameters.charset>>
                steps:
                  - run:
                      name: Generate output
                      command: |
                        while read line
                        do
                          java -jar /plantuml.jar -charset <<parameters.charset>> -<<parameters.output_file_format>> $line
                        done < text_to_svg

            - unless:
                condition: <<parameters.charset>>
                steps:
                  - run:
                      name: Generate output
                      command: |
                        while read line
                        do
                          java -jar /plantuml.jar -<<parameters.output_file_format>> $line
                        done < text_to_svg

            - run:
                name: Move generated output to artifacts directory
                command: |
                  find `pwd` -type f -name *<<parameters.output_file_format>> | sed -e "s~$CIRCLE_WORKING_DIRECTORY~~" | xargs -I {} dirname {} | sort | uniq | xargs -i mkdir -p <<parameters.workspace_root>>/<<parameters.workspace_path>>{}
                  find `pwd` -type f -name *<<parameters.output_file_format>> | sed -e "s~$CIRCLE_WORKING_DIRECTORY~~" | xargs -i mv `pwd`{}  <<parameters.workspace_root>>/<<parameters.workspace_path>>{}

            - store_artifacts:
                path: <<parameters.workspace_root>>/<<parameters.workspace_path>>

      - unless:
          condition: <<parameters.updated_files_only>>
          steps:
            - run:
                name: Create directories to store artifacts
                command: mkdir -p <<parameters.workspace_root>>/<<parameters.workspace_path>>

            - when:
                condition: <<parameters.charset>>
                steps:
                  - run:
                      name: Generate output
                      command: |
                        find `pwd` -type f -name *<<parameters.extension>> | xargs java -jar /plantuml.jar -charset <<parameters.charset>> -<<parameters.output_file_format>> *<<parameters.extension>>

            - unless:
                condition: <<parameters.charset>>
                steps:
                  - run:
                      name: Generate output
                      command: |
                        find `pwd` -type f -name *<<parameters.extension>> | xargs java -jar /plantuml.jar -<<parameters.output_file_format>> *<<parameters.extension>>

            - run:
                name: Move generated SVG to artifacts directory
                command: |
                  find `pwd` -type f -name *.<<parameters.output_file_format>> | sed -e "s~$CIRCLE_WORKING_DIRECTORY~~" | xargs -I {} dirname {} | sort | uniq | xargs -i mkdir -p <<parameters.workspace_root>>/<<parameters.workspace_path>>{}
                  find `pwd` -type f -name *.<<parameters.output_file_format>> | sed -e "s~$CIRCLE_WORKING_DIRECTORY~~" | xargs -i mv `pwd`{}  <<parameters.workspace_root>>/<<parameters.workspace_path>>{}

            - store_artifacts:
                path: <<parameters.workspace_root>>/<<parameters.workspace_path>>

      - when:
          condition: <<parameters.persist_to_workspace>>
          steps:
            - persist_to_workspace:
                root: <<parameters.workspace_root>>
                paths:
                  - <<parameters.workspace_path>>

      - unless:
          condition: <<parameters.persist_to_workspace>>
          steps:
            - run:
                name: End of steps
                command: echo "persist_to_workspace step skipped."

executors:
  plantuml:
    docker:
      - image: think/plantuml
